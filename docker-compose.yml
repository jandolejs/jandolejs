version: "3.9"

services:

    nginx:
        image: wodby/nginx
        container_name: "${PROJECT_NAME}_nginx"
        restart: always
        depends_on:
            - php
        environment:
            NGINX_STATIC_OPEN_FILE_CACHE: "off"
            NGINX_ERROR_LOG_LEVEL: debug
            NGINX_BACKEND_HOST: php
            NGINX_VHOST_PRESET: php
            NGINX_SERVER_ROOT: /var/www/html/www
        volumes:
            - ./src/:/var/www/html
        networks:
            - web
        labels:
            # Enable traefik
            - "traefik.enable=true"

            # Route HTTP Web
            - "traefik.http.routers.${PROJECT_NAME}_http.rule=Host(`www.${PROJECT_BASE_URL}`, `${PROJECT_BASE_URL}`)"
            - "traefik.http.routers.${PROJECT_NAME}_http.entrypoints=web"

            # Route HTTPS Web
            - "traefik.http.routers.${PROJECT_NAME}_https.rule=Host(`www.${PROJECT_BASE_URL}`, `${PROJECT_BASE_URL}`)"
            - "traefik.http.routers.${PROJECT_NAME}_https.entrypoints=websecure"

            # Redirect HTTP to HTTPS
            - "traefik.http.routers.${PROJECT_NAME}_http.middlewares=${PROJECT_NAME}_https_redirect"
            - "traefik.http.middlewares.${PROJECT_NAME}_https_redirect.redirectscheme.scheme=https"
            - "traefik.http.middlewares.${PROJECT_NAME}_https_redirect.redirectscheme.permanent=true"

            # Redirect normal web to www
            - "traefik.http.routers.${PROJECT_NAME}_https.middlewares=${PROJECT_NAME}_www_redirect"
            - "traefik.http.middlewares.${PROJECT_NAME}_www_redirect.redirectregex.regex=^(https?)://${PROJECT_BASE_URL}/(.*)$$"
            - "traefik.http.middlewares.${PROJECT_NAME}_www_redirect.redirectregex.replacement=$${1}://www.${PROJECT_BASE_URL}/$${2}"
            - "traefik.http.middlewares.${PROJECT_NAME}_www_redirect.redirectregex.permanent=true"

            # TLS Certificates
            - "traefik.http.routers.${PROJECT_NAME}_https.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}_https.tls.certresolver=myresolver"

    php:
        image: wodby/php:8
        container_name: "${PROJECT_NAME}_php"
        restart: always
        environment:
            PHP_FPM_CLEAR_ENV: 'no'
            PHP_FPM_USER: wodby
            PHP_FPM_GROUP: wodby
        volumes:
            - ./src:/var/www/html
        depends_on:
            - composer
        networks:
            - database
            - web

    composer:
        container_name: "${PROJECT_NAME}_composer"
        image: composer
        command: install
        volumes:
            - ./src:/app

    database:
        image: wodby/mariadb
        container_name: "${PROJECT_NAME}_mariadb"
        environment:
            MYSQL_ROOT_PASSWORD: $DB_PASSWORD
        restart: always
        volumes:
            - ./mysql:/var/lib/mysql
            - ./src/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - database
            - adminer

networks:
    database:
        name: database
    web:
        name: jandolejs_cz
